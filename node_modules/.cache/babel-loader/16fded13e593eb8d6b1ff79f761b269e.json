{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dewannk\\\\Desktop\\\\redux-second\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Notification from \"./components/Notification/Notification\";\nimport Products from \"./components/Shop/Products\";\nimport { fetchCartData } from \"./store/cart-fetch-actions\";\nimport { uiActions } from \"./store/ui-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    if (cart.changed) {\n      const sendCartData = async () => {\n        dispatch(uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending cart data\"\n        }));\n        const response = await fetch(\"https://first-react-project-movies-default-rtdb.firebaseio.com/cart.json\", {\n          method: \"PUT\",\n          body: JSON.stringify(cart)\n        });\n        if (!response.ok) {\n          throw new Error(\"Sending cart data failed\");\n        }\n        // const responseData = await response.json();\n        dispatch(uiActions.showNotification({\n          status: \"success\",\n          title: \"Success...\",\n          message: \"Sent cart data succesfully\"\n        }));\n      };\n      if (isInitial) {\n        isInitial = false;\n        return;\n      }\n      sendCartData().catch(error => {\n        dispatch(uiActions.showNotification({\n          status: \"error\",\n          title: \"Error...\",\n          message: \"Sending cart data failed!\"\n        }));\n      });\n    }\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      message: notification.message,\n      title: notification.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VR1M6IVuuPBVs+1RM1Xbj4a8yvI=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","useSelector","useDispatch","Cart","Layout","Notification","Products","fetchCartData","uiActions","isInitial","App","showCart","state","ui","cartIsVisible","cart","dispatch","notification","changed","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"sources":["C:/Users/Dewannk/Desktop/redux-second/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Notification from \"./components/Notification/Notification\";\nimport Products from \"./components/Shop/Products\";\nimport { fetchCartData } from \"./store/cart-fetch-actions\";\nimport { uiActions } from \"./store/ui-slice\";\n\nlet isInitial = true;\n\nfunction App() {\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (cart.changed) {\n      const sendCartData = async () => {\n        dispatch(\n          uiActions.showNotification({\n            status: \"pending\",\n            title: \"Sending...\",\n            message: \"Sending cart data\",\n          })\n        );\n\n        const response = await fetch(\n          \"https://first-react-project-movies-default-rtdb.firebaseio.com/cart.json\",\n          {\n            method: \"PUT\",\n            body: JSON.stringify(cart),\n          }\n        );\n\n        if (!response.ok) {\n          throw new Error(\"Sending cart data failed\");\n        }\n        // const responseData = await response.json();\n        dispatch(\n          uiActions.showNotification({\n            status: \"success\",\n            title: \"Success...\",\n            message: \"Sent cart data succesfully\",\n          })\n        );\n      };\n\n      if (isInitial) {\n        isInitial = false;\n        return;\n      }\n\n      sendCartData().catch((error) => {\n        dispatch(\n          uiActions.showNotification({\n            status: \"error\",\n            title: \"Error...\",\n            message: \"Sending cart data failed!\",\n          })\n        );\n      });\n    }\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          message={notification.message}\n          title={notification.title}\n        />\n      )}\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAE7C,IAAIC,SAAS,GAAG,IAAI;AAEpB,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,QAAQ,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC/D,MAAMC,IAAI,GAAGd,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;EAC/C,MAAMC,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAMe,YAAY,GAAGhB,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACI,YAAY,CAAC;EAElEjB,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACT,aAAa,EAAE,CAAC;EAC3B,CAAC,EAAE,CAACS,QAAQ,CAAC,CAAC;EAEdhB,SAAS,CAAC,MAAM;IACd,IAAIe,IAAI,CAACG,OAAO,EAAE;MAChB,MAAMC,YAAY,GAAG,YAAY;QAC/BH,QAAQ,CACNR,SAAS,CAACY,gBAAgB,CAAC;UACzBC,MAAM,EAAE,SAAS;UACjBC,KAAK,EAAE,YAAY;UACnBC,OAAO,EAAE;QACX,CAAC,CAAC,CACH;QAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0EAA0E,EAC1E;UACEC,MAAM,EAAE,KAAK;UACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,IAAI;QAC3B,CAAC,CACF;QAED,IAAI,CAACS,QAAQ,CAACM,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QACA;QACAf,QAAQ,CACNR,SAAS,CAACY,gBAAgB,CAAC;UACzBC,MAAM,EAAE,SAAS;UACjBC,KAAK,EAAE,YAAY;UACnBC,OAAO,EAAE;QACX,CAAC,CAAC,CACH;MACH,CAAC;MAED,IAAId,SAAS,EAAE;QACbA,SAAS,GAAG,KAAK;QACjB;MACF;MAEAU,YAAY,EAAE,CAACa,KAAK,CAAEC,KAAK,IAAK;QAC9BjB,QAAQ,CACNR,SAAS,CAACY,gBAAgB,CAAC;UACzBC,MAAM,EAAE,OAAO;UACfC,KAAK,EAAE,UAAU;UACjBC,OAAO,EAAE;QACX,CAAC,CAAC,CACH;MACH,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACR,IAAI,EAAEC,QAAQ,CAAC,CAAC;EAEpB,oBACE,QAAC,QAAQ;IAAA,WACNC,YAAY,iBACX,QAAC,YAAY;MACX,MAAM,EAAEA,YAAY,CAACI,MAAO;MAC5B,OAAO,EAAEJ,YAAY,CAACM,OAAQ;MAC9B,KAAK,EAAEN,YAAY,CAACK;IAAM;MAAA;MAAA;MAAA;IAAA,QAE7B,eACD,QAAC,MAAM;MAAA,WACJX,QAAQ,iBAAI,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACrB,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEf;AAAC,GA1EQD,GAAG;EAAA,QACOT,WAAW,EACfA,WAAW,EACPC,WAAW,EACPD,WAAW;AAAA;AAAA,KAJzBS,GAAG;AA4EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}